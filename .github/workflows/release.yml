name: Build & Publish Sapar Mini

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            npm run build:win
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            npm run build:mac
          else
            npm run build:linux
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare installers only
        shell: bash
        run: |
          mkdir upload
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp dist/*.exe upload/"Sapar Mini for Windows.exe" 2>/dev/null || true
            cp dist/*.msi upload/"Sapar Mini for Windows.msi" 2>/dev/null || true
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            cp dist/*.dmg upload/"Sapar Mini for MacOS.dmg" 2>/dev/null || true
          else
            cp dist/*.AppImage upload/"Sapar Mini for Linux.AppImage" 2>/dev/null || true
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: installers-${{ matrix.os }}
          path: upload/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all installers
        uses: actions/download-artifact@v4
        with:
          path: all-installers

      - name: Get date for tag
        id: get_date
        run: |
          DATE=$(date +'%Y-%m-%d_%H-%M-%S')
          echo "date=$DATE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ steps.get_date.outputs.date }}
          name: "Sapar Mini build ${{ steps.get_date.outputs.date }}"
          files: all-installers/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
